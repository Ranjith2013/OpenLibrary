{"version":3,"sources":["logo.svg","components/Search.jsx","components/DisplaySearchResult.jsx","Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Search","onSearchChange","fetchSearchResult","isSearching","onSearchFilter","onSearchClick","console","log","className","onChange","target","value","onClick","DisplaySearchResult","selectedItem","onListSelect","map","item","index","width","height","src","cover_i","title","style","color","author_name","length","join","Home","useState","setFecthSearchResult","setIsSearching","isSearchSelected","setIsSearchSelected","setSelectedItem","searchText","setSearchText","fetchAPI","query","fetch","then","response","json","data","result","docs","catch","err","key","resp","inputText","searchRes","sort","a","b","localeCompare","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c1188ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Search = ({\r\n  onSearchChange,\r\n  isSearching,\r\n  fetchSearchResult,\r\n  onSearchFilter,\r\n  onSearchClick,\r\n}) => {\r\n  console.log(\"fetchSearchResult\", fetchSearchResult);\r\n  return (\r\n    <>\r\n      <div className=\"Search-title\">Search For the Book Title</div>\r\n      <div className=\"search-container\">\r\n        <input\r\n          className=\"input-field\"\r\n          onChange={({ target }) => onSearchChange(target.value)}\r\n        />\r\n        <button className=\"search-button\" onClick={onSearchClick}>\r\n          Search\r\n        </button>\r\n        <span className=\"search-filter\">\r\n          Filter\r\n          <select\r\n            className=\"filter\"\r\n            onChange={({ target }) => onSearchFilter(target.value)}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"author\">Author</option>\r\n            <option value=\"title\"> Title</option>\r\n            <option value=\"sort\">Sort A-z</option>\r\n          </select>\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import \"./displayCard.scss\";\r\n\r\nconst DisplaySearchResult = ({\r\n  selectedItem,\r\n  onSearchChange,\r\n  isSearching,\r\n  onListSelect,\r\n  fetchSearchResult,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          isSearching ? \"list-search-card\" : \"search-container-display\"\r\n        }\r\n      >\r\n        {fetchSearchResult &&\r\n          fetchSearchResult.map((item, index) => {\r\n            return (\r\n              <div className={\"list-card\"} key={index}>\r\n                <div className=\"card-item\">\r\n                  <img\r\n                    width=\"60px\"\r\n                    height=\"60px\"\r\n                    src={`https://covers.openlibrary.org/b/id/${item.cover_i}-S.jpg?default=https://openlibrary.org/static/images/icons/avatar_book-sm.png`}\r\n                  />\r\n                  <span className=\"list-text\"> {item.title} </span>\r\n\r\n                  <div className=\"author-name\">\r\n                    <span style={{ color: \"black\" }}> by -</span>{\" \"}\r\n                    {item.author_name && item.author_name.length > 1\r\n                      ? item.author_name.join(\",\")\r\n                      : item.author_name}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplaySearchResult;\r\n","import { useState } from \"react\";\r\nimport Search from \"./components/Search\";\r\nimport DisplaySearchResult from \"./components/DisplaySearchResult\";\r\n\r\nconst Home = () => {\r\n  const [fetchSearchResult, setFecthSearchResult] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [isSearchSelected, setIsSearchSelected] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState({});\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const onSearchChange = (value) => {\r\n    setSearchText(value);\r\n  };\r\n\r\n  const onSearchClick = () => {\r\n    setIsSearching(true);\r\n    setIsSearchSelected(true);\r\n    let value = searchText;\r\n    if (value.length > 3) {\r\n      fetchAPI(\"q\", value);\r\n    }\r\n  };\r\n\r\n  const onListSelect = (item) => {\r\n    console.log(\"onListSelect\", item);\r\n    fetch(`https://openlibrary.org${item.key}.json`)\r\n      .then((response) => response.json())\r\n      .then((resp) => {\r\n        setIsSearchSelected(true);\r\n        setSelectedItem(resp);\r\n        console.log(\"after select\", resp);\r\n      })\r\n      .catch((err) => {\r\n        setIsSearchSelected(false);\r\n        console.log(\"fetch data error\", err);\r\n      });\r\n  };\r\n\r\n  const onSearchFilter = (value) => {\r\n    console.log(value);\r\n    setIsSearching(true);\r\n    let inputText = searchText;\r\n    if (value === \"author\") {\r\n      fetchAPI(\"author\", inputText);\r\n    } else if (value === \"title\") {\r\n      fetchAPI(\"title\", inputText);\r\n    } else if (value == \"all\") {\r\n      fetchAPI(\"q\", inputText);\r\n    } else if (value === \"sort\") {\r\n      console.log(\"sort\");\r\n      let searchRes = [...fetchSearchResult];\r\n      searchRes.sort((a, b) => a.title.localeCompare(b.title));\r\n      console.log(\"called sort\", fetchSearchResult, searchRes);\r\n      setFecthSearchResult([...searchRes]);\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n  //arrow function\r\n  const fetchAPI = (query, value) => {\r\n    fetch(\r\n      `https://openlibrary.org/search.json?${query}=${value}&_facet=false&_spellcheck_count=0&limit=100&fields=key,cover_i,title,author_name,name&mode=everything`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let result = data.docs ? data.docs : [];\r\n        setFecthSearchResult([...result]);\r\n        console.log(\"data\", data);\r\n        setIsSearching(false);\r\n      })\r\n      .catch((err) => {\r\n        setIsSearching(false);\r\n        console.log(\"error in fetching data\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"heading\">Open Library</div>\r\n\r\n      <Search\r\n        onSearchChange={onSearchChange}\r\n        fetchSearchResult={fetchSearchResult}\r\n        isSearching={isSearching}\r\n        onListSelect={onListSelect}\r\n        onSearchClick={() => onSearchClick()}\r\n        onSearchFilter={onSearchFilter}\r\n      />\r\n      {isSearchSelected && (\r\n        <DisplaySearchResult\r\n          fetchSearchResult={fetchSearchResult}\r\n          isSearching={isSearching}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport \"./App.scss\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}